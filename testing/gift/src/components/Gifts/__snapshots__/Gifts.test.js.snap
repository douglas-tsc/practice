// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Gifts renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Gift
    id={1}
    removeGift={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          data-test="addPersonName"
          onChange={[Function]}
          placeholder="Person"
          type="text"
        />,
        ";",
        <input
          data-test="addPresentName"
          onChange={[Function]}
          placeholder="Present"
          type="text"
        />,
        <button
          data-test="removeButton"
          onClick={[Function]}
        >
          Remove
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "data-test": "addPersonName",
          "onChange": [Function],
          "placeholder": "Person",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      ";",
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "data-test": "addPresentName",
          "onChange": [Function],
          "placeholder": "Present",
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "Remove",
          "data-test": "removeButton",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Remove",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            data-test="addPersonName"
            onChange={[Function]}
            placeholder="Person"
            type="text"
          />,
          ";",
          <input
            data-test="addPresentName"
            onChange={[Function]}
            placeholder="Present"
            type="text"
          />,
          <button
            data-test="removeButton"
            onClick={[Function]}
          >
            Remove
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "data-test": "addPersonName",
            "onChange": [Function],
            "placeholder": "Person",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        ";",
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "data-test": "addPresentName",
            "onChange": [Function],
            "placeholder": "Present",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Remove",
            "data-test": "removeButton",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Remove",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
